Day 58 JAVA REVIEW

Topics:

        	    1. Primitives: int, double, char, boolean
        		2. Primitive Type Castings: Implicit vs Explicit
        		3. Wrapper class
        		4. String
        		5. String vs StringBuilder vs StringBuffer
        		6. Loops: for & while
        		7. Arrays
        		8. for each loop
        		9. Custom Methods
        		10. Method Overloading

        		1. Primitives:byte,short,int,long, float, double, char, boolean

                2. Primitive Type Castings: Implicit vs Explicit
                    a. implicit casting: casting smaller primitive types to larger
                    b. explicit casting: casting larger primitive types to smaller

                3.Wrapper Class :    The objects that represent the primitives
                                     Enables us to use primitive data types in Collection, Map
                                     Also have some useful methods

                4. String:      Immutable
                                "Kraftech"
                                Methods: length,substring, charAt, tolowercase, touppercase, replace,split
                                        equals, equalsIgnoreCase,startswith, endswith, concat, trim,isEmpty, isBlank
                                        indexOf, contains ....

                5. StringBuilder vs StringBuffer:
                            mutable char sequences()
                            have reverse() feature
                            slower than String

                            StringBuilder: Not Syncronised
                                           faster than StringBuffer

                            StringBuffer: Synchronised

                6. Loops: for & while
                           for  :if the number of repetition is known
                                        for( initialization  ; condition ; increment/decrement   ){
                                                statements
                                        }

                                    while: to repeat unknown number of times
                                    while(condition){
                                    statement
                                    }

                                    do-While: executes at least once
                                    do{
                                    statements;
                                    }while(condition)

                                    branching statements:
                                    break   :    exit the loop (switch)
                                    continue:    jumps to the next iteration of the loop
                                    return  :    exits the current method

                7. Arrays:      Data Structure supprting multiple variables
                                use when multiple data is needed
                                fast
                                has index
                                supports both primitive and non primitive
                                can be multi dimentional
                                size is fixed, can not be used with unknown number of data

                8. for each loop : iteration is fixed (from the first element to the last)
                                   you dont have access to the index numbers, can not reassign values

                9. Custom Methods:   Function
                                     reusability
                                     series o f code blocks for a specific purpose/task

                                     public static void/returnDatatype methodName(){
                                      code performs the task
                                     }
                10. Method Overloading:  multiple methods having same name in a class
                                         Different parameter (number, type)
                                         reusability
                                         (static polymorphism)